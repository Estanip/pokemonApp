{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Locus\\\\Desktop\\\\Programacion\\\\Henry\\\\PI\\\\PI-Pokemon-main\\\\pokemonApp\\\\client\\\\src\\\\components\\\\SearchByType\\\\SearchByType.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { getPokemonsByType, getTypes } from '../../actions';\nimport Select from 'react-select';\nimport './SearchByType.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchBy(_ref) {\n  _s();\n\n  let {\n    getPokemonsByType,\n    types,\n    getTypes,\n    pokemons\n  } = _ref;\n  const [inputSearch, setInput] = useState(\"\");\n  const customStyles = {\n    container: (provided, state) => ({ ...provided,\n      width: state.selectProps.width,\n      marginLeft: state.selectProps.marginLeft\n    }),\n    menu: (provided, state) => ({ ...provided,\n      borderBottom: '1px dotted pink',\n      color: state.selectProps.menuColor\n    }),\n    singleValue: (provided, state) => {\n      const opacity = state.isDisabled ? 0.5 : 1;\n      const transition = 'opacity 300ms';\n      return { ...provided,\n        opacity,\n        transition\n      };\n    }\n  };\n  let typesOption = [];\n  types.map(e => typesOption.push({\n    value: e.id,\n    label: e.name\n  }));\n\n  const handleOnClick = e => {\n    e.preventDefault();\n\n    const search = async () => {\n      if (inputSearch === \"\") {\n        toast.warn(\"No se ingreso un tipo\");\n      }\n\n      let resultType = pokemons.filter(e => e.types.includes(inputSearch));\n\n      if (resultType.length === 0) {\n        toast.warn(\"No existen pokemons con ese tipo\");\n      } else {\n        getPokemonsByType(inputSearch);\n      }\n    };\n\n    search();\n  };\n\n  useEffect(() => {\n    const gettingTypes = async () => {\n      await getTypes();\n    };\n\n    gettingTypes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"searchByType-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"searchByType__form-container\",\n      onSubmit: e => handleOnClick(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"select__container\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          styles: customStyles,\n          width: \"400px\",\n          menuColor: \"#3B4CCA\",\n          name: \"tipos\",\n          options: typesOption,\n          onChange: e => setInput(e.label),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btnSearchByType__container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Search By Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchBy, \"TpDY4UYWG2gS+mpj2awkW7c8vPM=\");\n\n_c = SearchBy;\n\nconst mapStateToProps = state => {\n  return {\n    types: state.types,\n    pokemons: state.pokemons\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPokemonsByType: type => dispatch(getPokemonsByType(type)),\n    getTypes: () => dispatch(getTypes())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBy);\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBy\");","map":{"version":3,"sources":["C:/Users/Locus/Desktop/Programacion/Henry/PI/PI-Pokemon-main/pokemonApp/client/src/components/SearchByType/SearchByType.js"],"names":["React","useState","useEffect","connect","toast","getPokemonsByType","getTypes","Select","SearchBy","types","pokemons","inputSearch","setInput","customStyles","container","provided","state","width","selectProps","marginLeft","menu","borderBottom","color","menuColor","singleValue","opacity","isDisabled","transition","typesOption","map","e","push","value","id","label","name","handleOnClick","preventDefault","search","warn","resultType","filter","includes","length","gettingTypes","mapStateToProps","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { getPokemonsByType, getTypes } from '../../actions';\r\nimport Select from 'react-select';\r\nimport './SearchByType.css';\r\n\r\n\r\nfunction SearchBy({ getPokemonsByType, types, getTypes, pokemons }) {\r\n\r\n    const [inputSearch, setInput] = useState(\"\");\r\n\r\n    const customStyles = {\r\n        container: (provided, state) => ({\r\n            ...provided,\r\n            width: state.selectProps.width,\r\n            marginLeft: state.selectProps.marginLeft\r\n        }),\r\n\r\n        menu: (provided, state) => ({\r\n            ...provided,\r\n            borderBottom: '1px dotted pink',\r\n            color: state.selectProps.menuColor,\r\n        }),\r\n\r\n        singleValue: (provided, state) => {\r\n            const opacity = state.isDisabled ? 0.5 : 1;\r\n            const transition = 'opacity 300ms';\r\n\r\n            return { ...provided, opacity, transition };\r\n        }\r\n    }\r\n\r\n    let typesOption = [];\r\n    types.map(e => typesOption.push({ value: e.id, label: e.name }))\r\n\r\n\r\n    const handleOnClick = (e) => {\r\n        e.preventDefault();\r\n        const search = async () => {\r\n\r\n            if (inputSearch === \"\") {\r\n                toast.warn(\"No se ingreso un tipo\")\r\n            }\r\n\r\n            let resultType = pokemons.filter(e => e.types.includes(inputSearch))\r\n\r\n            if (resultType.length === 0) {\r\n                toast.warn(\"No existen pokemons con ese tipo\")\r\n            } else {\r\n                getPokemonsByType(inputSearch)\r\n            }\r\n        }\r\n        search();\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        const gettingTypes = async () => {\r\n            await getTypes()\r\n        }\r\n\r\n        gettingTypes()\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className='searchByType-container' >\r\n            <form\r\n                className=\"searchByType__form-container\"\r\n                onSubmit={(e) => handleOnClick(e)}>\r\n\r\n                <div className='select__container'>\r\n                    <Select\r\n                        styles={customStyles}\r\n                        width=\"400px\"\r\n                        menuColor='#3B4CCA'\r\n                        name='tipos'\r\n                        options={typesOption}\r\n                        onChange={(e) => setInput(e.label)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='btnSearchByType__container'>\r\n                    <button\r\n                        type='submit'>\r\n                        Search By Type\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        types: state.types,\r\n        pokemons: state.pokemons\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        getPokemonsByType: (type) => dispatch(getPokemonsByType(type)),\r\n        getTypes: () => dispatch(getTypes())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBy)"]},"metadata":{},"sourceType":"module"}