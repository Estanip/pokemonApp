{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Locus/Desktop/Programacion/Henry/PI/PI-Pokemon-main/pokemonApp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:/Users/Locus/Desktop/Programacion/Henry/PI/PI-Pokemon-main/pokemonApp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var initialState={pokemons:[],pokemonsCopy:[],pokemon:[],types:[]};var rootReducer=function rootReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'GET_POKEMONS':return _objectSpread(_objectSpread({},state),{},{pokemons:action.data,pokemonsCopy:action.data});case'GET_TYPES':return _objectSpread(_objectSpread({},state),{},{types:action.data});case'GET_DB_POKEMONS':var pokemonsList=_toConsumableArray(state.pokemonsCopy);if(action.data.length===0){return _objectSpread(_objectSpread({},state),{},{pokemons:pokemonsList});}else{return _objectSpread(_objectSpread({},state),{},{pokemons:action.data});}case'GET_POKEMON_BY_NAME':var pokemonsName=_toConsumableArray(state.pokemonsCopy);var resultName=pokemonsName.filter(function(e){return e.name.includes(action.payload);});if(action.payload===\"\"){return _objectSpread(_objectSpread({},state),{},{pokemons:pokemonsName});}if(resultName.length===0){return _objectSpread(_objectSpread({},state),{},{pokemons:pokemonsName});}else{return _objectSpread(_objectSpread({},state),{},{pokemons:resultName});}case'GET_POKEMON_BY_ID':return _objectSpread(_objectSpread({},state),{},{pokemon:action.data});case'GET_POKEMONS_BY_TYPE':var pokemonsTypes=_toConsumableArray(state.pokemonsCopy);var resultType=pokemonsTypes.filter(function(e){return e.types.includes(action.payload);});if(action.payload===\"\"){return _objectSpread(_objectSpread({},state),{},{pokemons:pokemonsTypes});}if(resultType.length===0){return _objectSpread(_objectSpread({},state),{},{pokemons:pokemonsTypes});}else{return _objectSpread(_objectSpread({},state),{},{pokemons:resultType});}case'ORDER_BY_NAME':var pokemonsByName=_toConsumableArray(state.pokemonsCopy);var sortOn=function sortOn(arr,prop){arr.sort(function(a,b){if(a[prop]<b[prop]){return-1;}else if(a[prop]>b[prop]){return 1;}else{return 0;}});};sortOn(pokemonsByName,\"name\");if(action.payload===\"ascendent\"){return _objectSpread(_objectSpread({},state),{},{pokemons:pokemonsByName});}else if(action.payload===\"descendent\"){return _objectSpread(_objectSpread({},state),{},{pokemons:pokemonsByName.reverse()});}case'ORDER_BY_FORCE':var pokemonsByForce=_toConsumableArray(state.pokemonsCopy);sortOn(pokemonsByForce,\"attack\");if(action.payload===\"ascendent\"){return _objectSpread(_objectSpread({},state),{},{pokemons:pokemonsByForce});}else if(action.payload===\"descendent\"){return _objectSpread(_objectSpread({},state),{},{pokemons:pokemonsByForce.reverse()});}case'CREATE_POKEMON':return _objectSpread(_objectSpread({},state),{},{pokemons:state.pokemons.push(action.payload)});default:return state;}};export default rootReducer;","map":{"version":3,"sources":["C:/Users/Locus/Desktop/Programacion/Henry/PI/PI-Pokemon-main/pokemonApp/client/src/reducers/index.js"],"names":["initialState","pokemons","pokemonsCopy","pokemon","types","rootReducer","state","action","type","data","pokemonsList","length","pokemonsName","resultName","filter","e","name","includes","payload","pokemonsTypes","resultType","pokemonsByName","sortOn","arr","prop","sort","a","b","reverse","pokemonsByForce","push"],"mappings":"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","sourcesContent":["const initialState = {\r\n    pokemons: [],\r\n    pokemonsCopy: [],\r\n    pokemon: [],\r\n    types: []\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_POKEMONS':\r\n            return {\r\n                ...state,\r\n                pokemons: action.data,\r\n                pokemonsCopy: action.data\r\n            }\r\n        case 'GET_TYPES':\r\n            return {\r\n                ...state,\r\n                types: action.data\r\n            }\r\n        case 'GET_DB_POKEMONS':\r\n            let pokemonsList = [...state.pokemonsCopy]\r\n            if (action.data.length === 0) {\r\n                return {\r\n                    ...state,\r\n                    pokemons: pokemonsList\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    pokemons: action.data\r\n                }\r\n            }\r\n\r\n        case 'GET_POKEMON_BY_NAME':\r\n            let pokemonsName = [...state.pokemonsCopy]\r\n            let resultName = pokemonsName.filter(e => e.name.includes(action.payload))\r\n            if (action.payload === \"\") {\r\n                return {\r\n                    ...state,\r\n                    pokemons: pokemonsName\r\n                }\r\n\r\n            }\r\n            if (resultName.length === 0) {\r\n                return {\r\n                    ...state,\r\n                    pokemons: pokemonsName\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    ...state,\r\n                    pokemons: resultName\r\n                }\r\n            }\r\n        case 'GET_POKEMON_BY_ID':\r\n            return {\r\n                ...state,\r\n                pokemon: action.data\r\n            }\r\n        case 'GET_POKEMONS_BY_TYPE':\r\n            let pokemonsTypes = [...state.pokemonsCopy]\r\n            let resultType = pokemonsTypes.filter(e => e.types.includes(action.payload))\r\n            if (action.payload === \"\") {\r\n                return {\r\n                    ...state,\r\n                    pokemons: pokemonsTypes\r\n                }\r\n\r\n            }\r\n            if (resultType.length === 0) {\r\n                return {\r\n                    ...state,\r\n                    pokemons: pokemonsTypes\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    ...state,\r\n                    pokemons: resultType\r\n                }\r\n            }\r\n        case 'ORDER_BY_NAME':\r\n            let pokemonsByName = [...state.pokemonsCopy]\r\n            function sortOn(arr, prop) {\r\n                arr.sort(\r\n                    function (a, b) {\r\n                        if (a[prop] < b[prop]) {\r\n                            return -1;\r\n                        } else if (a[prop] > b[prop]) {\r\n                            return 1;\r\n                        } else {\r\n                            return 0;\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n            sortOn(pokemonsByName, \"name\");\r\n            if (action.payload === \"ascendent\") {\r\n                return {\r\n                    ...state,\r\n                    pokemons: pokemonsByName\r\n                }\r\n            } else if (action.payload === \"descendent\") {\r\n                return {\r\n                    ...state,\r\n                    pokemons: pokemonsByName.reverse()\r\n                }\r\n            }\r\n        case 'ORDER_BY_FORCE':\r\n            let pokemonsByForce = [...state.pokemonsCopy]\r\n            sortOn(pokemonsByForce, \"attack\");\r\n            if (action.payload === \"ascendent\") {\r\n                return {\r\n                    ...state,\r\n                    pokemons: pokemonsByForce\r\n                }\r\n            } else if (action.payload === \"descendent\") {\r\n                return {\r\n                    ...state,\r\n                    pokemons: pokemonsByForce.reverse()\r\n                }\r\n            }\r\n        case 'CREATE_POKEMON':\r\n            return {\r\n                ...state,\r\n                pokemons: state.pokemons.push(action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}