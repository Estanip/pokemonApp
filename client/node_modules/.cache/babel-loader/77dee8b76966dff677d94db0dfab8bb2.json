{"ast":null,"code":"const initialState = {\n  pokemons: [],\n  pokemonsCopy: [],\n  pokemon: [],\n  types: []\n};\n\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'GET_POKEMONS':\n      return { ...state,\n        pokemons: action.data,\n        pokemonsCopy: action.data\n      };\n\n    case 'GET_TYPES':\n      return { ...state,\n        types: action.data\n      };\n\n    case 'GET_DB_POKEMONS':\n      let pokemonsList = [...state.pokemonsCopy];\n\n      if (action.data.length === 0) {\n        return { ...state,\n          pokemons: pokemonsList\n        };\n      } else {\n        return { ...state,\n          pokemons: action.data\n        };\n      }\n\n    case 'GET_POKEMON_BY_NAME':\n      let pokemonsName = [...state.pokemonsCopy];\n      let resultName = pokemonsName.filter(e => e.name.includes(action.payload));\n\n      if (action.payload === \"\") {\n        return { ...state,\n          pokemons: pokemonsName\n        };\n      }\n\n      if (resultName.length === 0) {\n        return { ...state,\n          pokemons: pokemonsName\n        };\n      } else {\n        return { ...state,\n          pokemons: resultName\n        };\n      }\n\n    case 'GET_POKEMON_BY_ID':\n      return { ...state,\n        pokemon: action.data\n      };\n\n    case 'GET_POKEMONS_BY_TYPE':\n      let pokemonsTypes = [...state.pokemonsCopy];\n      let resultType = pokemonsTypes.filter(e => e.types.includes(action.payload));\n\n      if (action.payload === \"\") {\n        return { ...state,\n          pokemons: pokemonsTypes\n        };\n      }\n\n      if (resultType.length === 0) {\n        return { ...state,\n          pokemons: pokemonsTypes\n        };\n      } else {\n        return { ...state,\n          pokemons: resultType\n        };\n      }\n\n    case 'ORDER_BY_NAME':\n      let pokemonsByName = [...state.pokemonsCopy];\n\n      function sortOn(arr, prop) {\n        arr.sort(function (a, b) {\n          if (a[prop] < b[prop]) {\n            return -1;\n          } else if (a[prop] > b[prop]) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n      }\n\n      sortOn(pokemonsByName, \"name\");\n\n      if (action.payload === \"ascendent\") {\n        return { ...state,\n          pokemons: pokemonsByName\n        };\n      } else if (action.payload === \"descendent\") {\n        return { ...state,\n          pokemons: pokemonsByName.reverse()\n        };\n      }\n\n    case 'ORDER_BY_FORCE':\n      let pokemonsByForce = [...state.pokemonsCopy];\n      sortOn(pokemonsByForce, \"attack\");\n\n      if (action.payload === \"ascendent\") {\n        return { ...state,\n          pokemons: pokemonsByForce\n        };\n      } else if (action.payload === \"descendent\") {\n        return { ...state,\n          pokemons: pokemonsByForce.reverse()\n        };\n      }\n\n    case 'CREATE_POKEMON':\n      return { ...state,\n        pokemons: state.pokemons.push(action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/Locus/Desktop/Programacion/Henry/PI/app/pokemonApp/api/src/client/src/reducers/index.js"],"names":["initialState","pokemons","pokemonsCopy","pokemon","types","rootReducer","state","action","type","data","pokemonsList","length","pokemonsName","resultName","filter","e","name","includes","payload","pokemonsTypes","resultType","pokemonsByName","sortOn","arr","prop","sort","a","b","reverse","pokemonsByForce","push"],"mappings":"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","sourcesContent":["const initialState = {\r\n    pokemons: [],\r\n    pokemonsCopy: [],\r\n    pokemon: [],\r\n    types: []\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_POKEMONS':\r\n            return {\r\n                ...state,\r\n                pokemons: action.data,\r\n                pokemonsCopy: action.data\r\n            }\r\n        case 'GET_TYPES':\r\n            return {\r\n                ...state,\r\n                types: action.data\r\n            }\r\n        case 'GET_DB_POKEMONS':\r\n            let pokemonsList = [...state.pokemonsCopy]\r\n            if (action.data.length === 0) {\r\n                return {\r\n                    ...state,\r\n                    pokemons: pokemonsList\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    pokemons: action.data\r\n                }\r\n            }\r\n\r\n        case 'GET_POKEMON_BY_NAME':\r\n            let pokemonsName = [...state.pokemonsCopy]\r\n            let resultName = pokemonsName.filter(e => e.name.includes(action.payload))\r\n            if (action.payload === \"\") {\r\n                return {\r\n                    ...state,\r\n                    pokemons: pokemonsName\r\n                }\r\n\r\n            }\r\n            if (resultName.length === 0) {\r\n                return {\r\n                    ...state,\r\n                    pokemons: pokemonsName\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    ...state,\r\n                    pokemons: resultName\r\n                }\r\n            }\r\n        case 'GET_POKEMON_BY_ID':\r\n            return {\r\n                ...state,\r\n                pokemon: action.data\r\n            }\r\n        case 'GET_POKEMONS_BY_TYPE':\r\n            let pokemonsTypes = [...state.pokemonsCopy]\r\n            let resultType = pokemonsTypes.filter(e => e.types.includes(action.payload))\r\n            if (action.payload === \"\") {\r\n                return {\r\n                    ...state,\r\n                    pokemons: pokemonsTypes\r\n                }\r\n\r\n            }\r\n            if (resultType.length === 0) {\r\n                return {\r\n                    ...state,\r\n                    pokemons: pokemonsTypes\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    ...state,\r\n                    pokemons: resultType\r\n                }\r\n            }\r\n        case 'ORDER_BY_NAME':\r\n            let pokemonsByName = [...state.pokemonsCopy]\r\n            function sortOn(arr, prop) {\r\n                arr.sort(\r\n                    function (a, b) {\r\n                        if (a[prop] < b[prop]) {\r\n                            return -1;\r\n                        } else if (a[prop] > b[prop]) {\r\n                            return 1;\r\n                        } else {\r\n                            return 0;\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n            sortOn(pokemonsByName, \"name\");\r\n            if (action.payload === \"ascendent\") {\r\n                return {\r\n                    ...state,\r\n                    pokemons: pokemonsByName\r\n                }\r\n            } else if (action.payload === \"descendent\") {\r\n                return {\r\n                    ...state,\r\n                    pokemons: pokemonsByName.reverse()\r\n                }\r\n            }\r\n        case 'ORDER_BY_FORCE':\r\n            let pokemonsByForce = [...state.pokemonsCopy]\r\n            sortOn(pokemonsByForce, \"attack\");\r\n            if (action.payload === \"ascendent\") {\r\n                return {\r\n                    ...state,\r\n                    pokemons: pokemonsByForce\r\n                }\r\n            } else if (action.payload === \"descendent\") {\r\n                return {\r\n                    ...state,\r\n                    pokemons: pokemonsByForce.reverse()\r\n                }\r\n            }\r\n        case 'CREATE_POKEMON':\r\n            return {\r\n                ...state,\r\n                pokemons: state.pokemons.push(action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}