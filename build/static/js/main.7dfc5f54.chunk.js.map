{"version":3,"sources":["reducers/index.js","store/store.js","pages/NotFoundPage/NotFoundPage.js","actions/index.js","components/SearchByName/SearchByName.js","components/SearchByType/SearchByType.js","components/Cards/Cards.js","helpers/typeColors.js","components/Card/Card.js","components/Loading/Loading.js","components/OrderBy/OrderBy.js","components/DbPokemons/DbPokemons.js","components/AllPokemons/AllPokemons.js","components/Pagination/Pagination.js","pages/Home/Home.js","helpers/routes.js","pages/Landing/Landing.js","assets/images/pokebola.png","pages/Form/Form.js","pages/PokemonDetail/PokemonDetail.js","routers/AppRouter.js","components/CreateForm/CreateForm.js","components/Navbar/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","pokemons","pokemonsCopy","pokemon","types","rootReducer","state","action","type","data","pokemonsList","length","pokemonsName","resultName","filter","e","name","includes","payload","pokemonsTypes","resultType","pokemonsByName","sortOn","arr","prop","sort","a","b","reverse","pokemonsByForce","push","store","createStore","applyMiddleware","thunk","NotFoundPage","url","getPokemons","dispatch","axios","get","apiPok","pokemonList","console","log","getTypes","results","orderByName","order","connect","getPokemonByName","useState","inputSearch","setInput","className","onSubmit","preventDefault","search","toast","warn","toLocaleLowerCase","toLowerCase","handleOnClick","value","onChange","target","placeholder","getPokemonsByType","customStyles","container","provided","width","selectProps","marginLeft","menu","borderBottom","color","menuColor","singleValue","opacity","isDisabled","transition","typesOption","map","id","label","useEffect","gettingTypes","styles","options","required","Cards","children","typeColors","bug","dragon","fairy","fire","ghost","ground","normal","pyschic","steel","dark","electric","fighting","flying","grass","ice","poison","rock","water","Card","props","image","force","backType","borderRadius","textAlign","marginTop","textTransform","fontSize","paddingTop","height","defaultImage","style","textDecoration","to","src","onError","onerror","replace","alt","backgroundColor","Loading","orderByForce","orderName","setOrderName","orderForce","setOrderForce","getByName","getByForce","onClick","getDbPokemons","getPok","page","setPage","setData","info","pageOne","slice","pageTwo","pageThree","pageFour","disabled","i","attack","loading","setLoading","getData","routes","landing","home","pokemonById","form","Landing","createPokemon","post","newPokemon","life","defense","speed","weight","setPokemon","padding","history","useHistory","handleOnChange","pokebola","result","handleSubmit","min","max","accept","file","files","reader","FileReader","onload","event","img","readAsDataURL","handleInputImage","isMulti","item","toString","handleChangeCheck","getPokemonById","useParams","marginBottom","getPokemon","AppRouter","exact","path","component","Home","Form","PokemonDetail","CreateForm","Navbar","useLocation","pathname","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7dfc5f54.chunk.js","sourcesContent":["const initialState = {\r\n    pokemons: [],\r\n    pokemonsCopy: [],\r\n    pokemon: [],\r\n    types: []\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_POKEMONS':\r\n            return {\r\n                ...state,\r\n                pokemons: action.data,\r\n                pokemonsCopy: action.data\r\n            }\r\n        case 'GET_TYPES':\r\n            return {\r\n                ...state,\r\n                types: action.data\r\n            }\r\n        case 'GET_DB_POKEMONS':\r\n            let pokemonsList = [...state.pokemonsCopy]\r\n            if (action.data.length === 0) {\r\n                return {\r\n                    ...state,\r\n                    pokemons: pokemonsList\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    pokemons: action.data\r\n                }\r\n            }\r\n\r\n        case 'GET_POKEMON_BY_NAME':\r\n            let pokemonsName = [...state.pokemonsCopy]\r\n            let resultName = pokemonsName.filter(e => e.name.includes(action.payload))\r\n            if (action.payload === \"\") {\r\n                return {\r\n                    ...state,\r\n                    pokemons: pokemonsName\r\n                }\r\n\r\n            }\r\n            if (resultName.length === 0) {\r\n                return {\r\n                    ...state,\r\n                    pokemons: pokemonsName\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    ...state,\r\n                    pokemons: resultName\r\n                }\r\n            }\r\n        case 'GET_POKEMON_BY_ID':\r\n            return {\r\n                ...state,\r\n                pokemon: action.data\r\n            }\r\n        case 'GET_POKEMONS_BY_TYPE':\r\n            let pokemonsTypes = [...state.pokemonsCopy]\r\n            let resultType = pokemonsTypes.filter(e => e.types.includes(action.payload))\r\n            if (action.payload === \"\") {\r\n                return {\r\n                    ...state,\r\n                    pokemons: pokemonsTypes\r\n                }\r\n\r\n            }\r\n            if (resultType.length === 0) {\r\n                return {\r\n                    ...state,\r\n                    pokemons: pokemonsTypes\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    ...state,\r\n                    pokemons: resultType\r\n                }\r\n            }\r\n        case 'ORDER_BY_NAME':\r\n            let pokemonsByName = [...state.pokemonsCopy]\r\n            function sortOn(arr, prop) {\r\n                arr.sort(\r\n                    function (a, b) {\r\n                        if (a[prop] < b[prop]) {\r\n                            return -1;\r\n                        } else if (a[prop] > b[prop]) {\r\n                            return 1;\r\n                        } else {\r\n                            return 0;\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n            sortOn(pokemonsByName, \"name\");\r\n            if (action.payload === \"ascendent\") {\r\n                return {\r\n                    ...state,\r\n                    pokemons: pokemonsByName\r\n                }\r\n            } else if (action.payload === \"descendent\") {\r\n                return {\r\n                    ...state,\r\n                    pokemons: pokemonsByName.reverse()\r\n                }\r\n            }\r\n        case 'ORDER_BY_FORCE':\r\n            let pokemonsByForce = [...state.pokemonsCopy]\r\n            sortOn(pokemonsByForce, \"attack\");\r\n            if (action.payload === \"ascendent\") {\r\n                return {\r\n                    ...state,\r\n                    pokemons: pokemonsByForce\r\n                }\r\n            } else if (action.payload === \"descendent\") {\r\n                return {\r\n                    ...state,\r\n                    pokemons: pokemonsByForce.reverse()\r\n                }\r\n            }\r\n        case 'CREATE_POKEMON':\r\n            return {\r\n                ...state,\r\n                pokemons: state.pokemons.push(action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;","import { applyMiddleware, createStore } from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n    );\r\n\r\nexport default store;","import React from 'react';\r\n\r\nexport default function NotFoundPage() {\r\n    return (\r\n        <div>\r\n            <h1>Pagina no encontrada</h1>\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios';\r\n\r\nconst url = \"https://pokemon-app-estanip.herokuapp.com\"\r\n\r\nexport function getPokemons() {\r\n    return async function (dispatch) {\r\n        try {\r\n            const apiPok = await axios.get(`${url}/pokemons/all`);\r\n            const pokemonList = apiPok.data;\r\n            return dispatch({\r\n                type: 'GET_POKEMONS',\r\n                data: pokemonList\r\n            })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n};\r\n\r\nexport function getDbPokemons() {\r\n    return async function (dispatch) {\r\n        try {\r\n            const pokemons = await axios.get(`${url}/pokemons/db`);\r\n            return dispatch({\r\n                type: 'GET_DB_POKEMONS',\r\n                data: pokemons.data\r\n            })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n};\r\n\r\nexport function getPokemonById(id) {\r\n    return async function (dispatch) {\r\n        try {\r\n            const result = await axios.get(`${url}/pokemons/${id}`);\r\n            return dispatch({\r\n                type: 'GET_POKEMON_BY_ID',\r\n                data: result.data,\r\n                payload: id\r\n            })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n};\r\n\r\nexport function getPokemonByName(name) {\r\n    return {\r\n        type: 'GET_POKEMON_BY_NAME',\r\n        payload: name\r\n    }\r\n};\r\n\r\nexport function getPokemonsByType(type) {\r\n    return {\r\n        type: 'GET_POKEMONS_BY_TYPE',\r\n        payload: type\r\n    }\r\n};\r\n\r\nexport function getTypes() {\r\n    return async function (dispatch) {\r\n        try {\r\n            const results = await axios.get(`${url}/types`);\r\n            return dispatch({\r\n                type: 'GET_TYPES',\r\n                data: results.data\r\n            })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n};\r\n\r\nexport function createPokemon(data) {\r\n    return async function (dispatch) {\r\n        const newPokemon = await axios.post(`${url}/pokemons/`, data)\r\n        return dispatch({\r\n            type: 'CREATE_POKEMON',\r\n            data: newPokemon,\r\n            payload: data\r\n        })\r\n    }\r\n};\r\n\r\nexport function orderByName(order) {\r\n    return {\r\n        type: 'ORDER_BY_NAME',\r\n        payload: order\r\n    }\r\n};\r\n\r\nexport function orderByForce(order) {\r\n    return {\r\n        type: 'ORDER_BY_FORCE',\r\n        payload: order\r\n    }\r\n};","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { getPokemonByName } from '../../actions';\r\nimport './SearchByName.css';\r\n\r\n\r\nfunction SearchBy({ getPokemonByName, pokemons }) {\r\n\r\n    const [inputSearch, setInput] = useState(\"\");\r\n\r\n    const handleOnClick = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        const search = async () => {\r\n\r\n            if (inputSearch === \"\") {\r\n                toast.warn(\"No se ingreso un nombre\")\r\n            }\r\n\r\n            let resultName = pokemons.filter(e => e.name.includes(inputSearch.toLocaleLowerCase()))\r\n\r\n            if (resultName.length === 0 && inputSearch !== \"\") {\r\n                toast.warn(\"No se encontraron pokemons con ese nombre\")\r\n                setInput(\"\")\r\n            }\r\n            else {\r\n                getPokemonByName(inputSearch.toLowerCase())\r\n                setInput(\"\")\r\n            }\r\n        }\r\n\r\n        search();\r\n    };\r\n\r\n    return (\r\n        <div className='search-container' >\r\n            <form\r\n                className=\"search__form-container\"\r\n                onSubmit={(e) => handleOnClick(e)}>\r\n                <div className='input__container'>\r\n                    <input\r\n                        value={inputSearch}\r\n                        onChange={(e) => setInput(e.target.value)}\r\n                        placeholder=\"Insert Name...\"\r\n                    />\r\n                </div>\r\n                <div className='btnSearch__container'>\r\n                    <button\r\n                        type='submit'>\r\n                        Search By Name\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        pokemons: state.pokemons\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        getPokemonByName: (name) => dispatch(getPokemonByName(name)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBy)","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { getPokemonsByType, getTypes } from '../../actions';\r\nimport Select from 'react-select';\r\nimport './SearchByType.css';\r\n\r\n\r\nfunction SearchBy({ getPokemonsByType, types, getTypes, pokemons }) {\r\n\r\n    const [inputSearch, setInput] = useState(\"\");\r\n\r\n    const customStyles = {\r\n        container: (provided, state) => ({\r\n            ...provided,\r\n            width: state.selectProps.width,\r\n            marginLeft: state.selectProps.marginLeft\r\n        }),\r\n\r\n        menu: (provided, state) => ({\r\n            ...provided,\r\n            borderBottom: '1px dotted pink',\r\n            color: state.selectProps.menuColor,\r\n        }),\r\n\r\n        singleValue: (provided, state) => {\r\n            const opacity = state.isDisabled ? 0.5 : 1;\r\n            const transition = 'opacity 300ms';\r\n\r\n            return { ...provided, opacity, transition };\r\n        }\r\n    }\r\n\r\n    let typesOption = [];\r\n    types.map(e => typesOption.push({ value: e.id, label: e.name }))\r\n\r\n\r\n    const handleOnClick = (e) => {\r\n        e.preventDefault();\r\n        const search = async () => {\r\n\r\n            if (inputSearch === \"\") {\r\n                toast.warn(\"No se ingreso un tipo\")\r\n            }\r\n\r\n            let resultType = pokemons.filter(e => e.types.includes(inputSearch))\r\n\r\n            if (resultType.length === 0) {\r\n                toast.warn(\"No existen pokemons con ese tipo\")\r\n            } else {\r\n                getPokemonsByType(inputSearch)\r\n            }\r\n        }\r\n        search();\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        const gettingTypes = async () => {\r\n            await getTypes()\r\n        }\r\n\r\n        gettingTypes()\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className='searchByType-container' >\r\n            <form\r\n                className=\"searchByType__form-container\"\r\n                onSubmit={(e) => handleOnClick(e)}>\r\n\r\n                <div className='select__container'>\r\n                    <Select\r\n                        styles={customStyles}\r\n                        width=\"400px\"\r\n                        menuColor='#3B4CCA'\r\n                        name='tipos'\r\n                        options={typesOption}\r\n                        onChange={(e) => setInput(e.label)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='btnSearchByType__container'>\r\n                    <button\r\n                        type='submit'>\r\n                        Search By Type\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        types: state.types,\r\n        pokemons: state.pokemons\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        getPokemonsByType: (type) => dispatch(getPokemonsByType(type)),\r\n        getTypes: () => dispatch(getTypes())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBy)","import React from 'react';\r\nimport './Cards.css';\r\n\r\nexport default function Cards({ children }) {\r\n    return (\r\n        <div className='cards-container'>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","const typeColors = {\r\n    bug: '#729f3f',\r\n    dragon: '#53a4cf',\r\n    fairy: '#fdb9e9',\r\n    fire: '#fd7d24',\r\n    ghost: '#7b62a3',\r\n    ground: '#f7de3f',\r\n    normal: '#a4acaf',\r\n    pyschic: '#f366b9',\r\n    steel: '#9eb7b',\r\n    dark: '#707070',\r\n    electric: '#eed535',\r\n    fighting: '#d56723',\r\n    flying: '#3dc7ef',\r\n    grass: '#9bcc50',\r\n    ice: '#51c4e7',\r\n    poison: '#b97fc9',\r\n    rock: '#a38c21',\r\n    water: '#4592c4'\r\n}\r\n\r\nexport default typeColors;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport typeColors from '../../helpers/typeColors';\r\nimport './Card.css';\r\n\r\nexport default function Card(props) {\r\n\r\n    const { id, name, image, types, force = [] } = props;\r\n\r\n    const backType = {\r\n        width: \"80px\",\r\n        borderRadius: \"20px\",\r\n        textAlign: \"center\",\r\n        marginTop: \"5px\",\r\n        textTransform: \"uppercase\",\r\n        color: \"#E8F3E2\",\r\n        fontSize: \"13px\",\r\n        paddingTop: \"4px\",\r\n        height: \"30px\"\r\n    }\r\n\r\n    const defaultImage = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/shiny/1.png\";\r\n\r\n    return (\r\n\r\n        <div className={`${types[0]}-container`}>\r\n\r\n            <div className='Name__card'>\r\n                <Link style={{ textDecoration: \"none\" }} to={`/pokemons/${id}`}>\r\n                    <p className=\"title__name\">{name}</p>\r\n                </Link>\r\n            </div>\r\n\r\n            <div className='Img__card'>\r\n                <img\r\n                    src={image ? image : defaultImage}\r\n                    onError={(e) => {\r\n                        if (e.target.src.includes('undefined')) {\r\n                            e.target.onerror = null;\r\n                            e.target.src = defaultImage\r\n                        } else if (e.target.src.includes('.jpeg')) {\r\n                            e.target.onerror = null;\r\n                            e.target.src = image.replace('jpeg', 'png')\r\n                        }\r\n                    }}\r\n                    alt={name} />\r\n\r\n            </div>\r\n\r\n            <div className='Types__card'>\r\n                {types.map(e => (<div style={{...backType, backgroundColor: typeColors[e]}} >\r\n                    {e}\r\n                </div>))}\r\n            </div>\r\n\r\n            <div className='Force__card'>\r\n                <span className='force__title'>Force</span>\r\n                <span className='force'>{force}</span>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './Loading.css';\r\n\r\nexport default function Loading() {\r\n\r\n    return (\r\n        <div id=\"loading-bar-spinner\" className=\"spinner\">\r\n            <div\r\n                className=\"spinner-icon\">\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { orderByForce, orderByName } from '../../actions';\r\nimport './OrderBy.css';\r\n\r\nfunction OrderBy({ orderByForce, orderByName }) {\r\n\r\n    const [orderName, setOrderName] = useState(\"ascendent\");\r\n    const [orderForce, setOrderForce] = useState(\"ascendent\");\r\n\r\n    const getByName = async (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        await orderByName(orderName);\r\n\r\n        if (orderName === \"ascendent\") {\r\n            setOrderName(\"descendent\")\r\n        }\r\n        if (orderName === \"descendent\") {\r\n            setOrderName(\"ascendent\")\r\n        }\r\n    }\r\n\r\n    const getByForce = async (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        await orderByForce(orderForce);\r\n\r\n\r\n        if (orderForce === \"ascendent\") {\r\n            setOrderForce(\"descendent\")\r\n        }\r\n        if (orderForce === \"descendent\") {\r\n            setOrderForce(\"ascendent\")\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='orderby-container'>\r\n            <button onClick={(e) => getByName(e)}>Order By Name</button>\r\n            <button onClick={(e) => getByForce(e)}>Order By Force</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        orderByForce: (order) => dispatch(orderByForce(order)),\r\n        orderByName: (order) => dispatch(orderByName(order))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(OrderBy);","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { getDbPokemons } from '../../actions';\r\nimport './DbPokemons.css';\r\n\r\nfunction DbPokemons({ getDbPokemons }) {\r\n\r\n    const getPok = async (e) => {\r\n        e.preventDefault()\r\n        const result = await getDbPokemons();\r\n        if (result.data.length === 0) {\r\n            toast.warn(\"No existen Pokemons en la DB\")\r\n        };\r\n    }\r\n\r\n    return (\r\n        <div className='btn-dbcontainer'>\r\n            <button onClick={(e) => getPok(e)}>My Pokemons</button>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        getDbPokemons: () => dispatch(getDbPokemons())\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(DbPokemons);","import React from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { orderByName } from '../../actions';\r\nimport './AllPokemons.css';\r\n\r\nfunction AllPokemons({ orderByName }) {\r\n\r\n    return (\r\n        <div className='btn-allcontainer'>\r\n            <button onClick={() => orderByName(\"ascendent\")}>All Pokemons</button>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        orderByName: (order) => dispatch(orderByName(order))\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(AllPokemons);","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Cards from '../../components/Cards/Cards';\r\nimport Card from '../../components/Card/Card';\r\nimport Loading from '../Loading/Loading';\r\nimport OrderBy from '../OrderBy/OrderBy';\r\nimport DbPokemons from '../DbPokemons/DbPokemons';\r\nimport AllPokemons from '../AllPokemons/AllPokemons';\r\n\r\nimport { toast } from 'react-toastify';\r\n\r\nimport './Pagination.css';\r\n\r\n\r\nfunction Pagination({ pokemons }) {\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [data, setData] = useState(pokemons);\r\n\r\n    useEffect(() => {\r\n\r\n        if (typeof pokemons === \"number\") {\r\n            toast.info(\"Cargando Pokemons\")\r\n        } else {\r\n\r\n            if (pokemons.length < 9) {\r\n                setPage(1)\r\n            }\r\n            if (page === 1) {\r\n                let pageOne = pokemons.slice(0, 9);\r\n                setData(pageOne)\r\n            }\r\n            if (page === 2) {\r\n                let pageTwo = pokemons.slice(9, 21);\r\n                setData(pageTwo)\r\n            }\r\n            if (page === 3) {\r\n                let pageThree = pokemons.slice(21, 33);\r\n                setData(pageThree)\r\n            }\r\n            if (page === 4) {\r\n                let pageFour = pokemons.slice(33, pokemons.length - 1);\r\n                setData(pageFour)\r\n            }\r\n        }\r\n\r\n    }, [page, pokemons])\r\n\r\n    return (\r\n        <div className='pagination-container'>\r\n            <div className='btnPage__container'>\r\n                <OrderBy />\r\n                <div className='page__btn'>\r\n                    {page === 1\r\n                        ?\r\n                        <button id=\"btnDisabled\" onClick={() => setPage(page - 1)} disabled>PREVIOUS</button>\r\n                        :\r\n                        <button onClick={() => setPage(page - 1)}>PREVIOUS</button>\r\n                    }\r\n\r\n                    {page === 4\r\n                        ?\r\n                        <button id=\"btnDisabled\" onClick={() => setPage(page + 1)} disabled>NEXT</button>\r\n                        :\r\n                        <button onClick={() => setPage(page + 1)}>NEXT</button>\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"btns-container\">\r\n                    <DbPokemons />\r\n                    <AllPokemons />\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <div className='pagination__content'>\r\n                {typeof data === \"number\"\r\n                    ?\r\n\r\n                    <Loading />\r\n\r\n                    :\r\n                    <Cards>\r\n                        {data.map((e, i) => <Card key={i} id={e.id} name={e.name} image={e.image} types={e.types} force={e.attack} />)}\r\n                    </Cards>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        pokemons: state.pokemons\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Pagination)","import React, { useState, useEffect } from 'react';\r\nimport { getPokemons } from '../../actions/index';\r\nimport { connect } from 'react-redux';\r\n\r\nimport SearchByName from '../../components/SearchByName/SearchByName';\r\nimport SearchByType from '../../components/SearchByType/SearchByType';\r\nimport Pagination from '../../components/Pagination/Pagination';\r\nimport Loading from '../../components/Loading/Loading';\r\n\r\nimport './Home.css';\r\n\r\nfunction Home({ getPokemons, pokemons }) {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        const getData = async () => {\r\n            await getPokemons();\r\n            setLoading(false)\r\n        }\r\n\r\n        getData();\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className='home-container'>\r\n\r\n            <div className=\"options-container\">\r\n                <SearchByName />\r\n                <SearchByType />\r\n            </div>\r\n\r\n            <div className=\"render__container\">\r\n                {loading === true || pokemons[0] === null || pokemons.length === 0\r\n\r\n                    ?\r\n     \r\n                    <div className=\"loading__container\">\r\n                          <Loading />\r\n                    </div>   \r\n                  \r\n\r\n                    :\r\n\r\n                    <Pagination />\r\n                }\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        pokemons: state.pokemons\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        getPokemons: () => dispatch(getPokemons()),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","const routes = {\r\n    landing: '/',\r\n    home: '/pokemons',\r\n    pokemonById: '/pokemons/:id',\r\n    form: '/form'\r\n};\r\n\r\nexport default routes;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport routes from '../../helpers/routes';\r\nimport './Landing.css';\r\n\r\nexport default function Landing() {\r\n\r\n    return (\r\n        <div className=\"landing-container\">\r\n            <div className='text__container'>\r\n                <Link to={routes.home} style={{ textDecoration: 'none' }}><span>INGRESAR</span></Link>\r\n            </div>\r\n        </div>\r\n    )\r\n};","export default __webpack_public_path__ + \"static/media/pokebola.84021ec3.png\";","import React, { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport { connect } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { createPokemon, getPokemons, getTypes } from '../../actions';\r\nimport routes from '../../helpers/routes';\r\nimport './Form.css'\r\nimport { toast } from 'react-toastify';\r\nimport pokebola from '../../assets/images/pokebola.png';\r\n\r\n\r\nfunction Form({ createPokemon, getTypes, types, getPokemons, pokemons }) {\r\n\r\n    const initialState = ({\r\n        name: \"\",\r\n        life: 0,\r\n        attack: 0,\r\n        defense: 0,\r\n        speed: 0,\r\n        height: 0,\r\n        weight: 0,\r\n        types: [],\r\n        image: []\r\n    });\r\n\r\n    const [pokemon, setPokemon] = useState(initialState);\r\n    const customStyles = {\r\n        container: (provided, state) => ({\r\n            ...provided,\r\n            width: state.selectProps.width,\r\n            marginLeft: state.selectProps.marginLeft\r\n        }),\r\n\r\n        menu: (provided, state) => ({\r\n          ...provided,\r\n          borderBottom: '1px dotted pink',\r\n          color: state.selectProps.menuColor,\r\n          padding: 20\r\n        }),\r\n      \r\n        singleValue: (provided, state) => {\r\n          const opacity = state.isDisabled ? 0.5 : 1;\r\n          const transition = 'opacity 300ms';\r\n      \r\n          return { ...provided, opacity, transition };\r\n        }\r\n      }\r\n    let history = useHistory();\r\n    let typesOption = [];\r\n    types.map(e => typesOption.push({ value: e.id, label: e.name }))\r\n\r\n    const handleOnChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setPokemon({\r\n            ...pokemon,\r\n            [name]: value.toLowerCase()\r\n        })\r\n    };\r\n\r\n    const handleChangeCheck = (e) => {\r\n        let type = [];\r\n        e.map(item => type.push((item.value).toString()))\r\n        setPokemon({\r\n            ...pokemon,\r\n            types: type\r\n        })\r\n    }\r\n\r\n    const handleInputImage = (e) => {\r\n\r\n        let file = e.target.files[0];\r\n        let reader = new FileReader();\r\n\r\n        reader.onload = (event) => {\r\n            let img = event.target.result\r\n            setPokemon({\r\n                ...pokemon,\r\n                image: img\r\n            })\r\n        }\r\n\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        let result = pokemons.filter(e => e.name.includes(pokemon.name))\r\n\r\n        if (pokemon.types.length === 0) {\r\n            toast.warn(\"No se ha seleccionado ningun tipo\");\r\n            return;\r\n        }\r\n        if (pokemon.types.length > 2) {\r\n            toast.warn(\"No se puede seleccionar mas de dos tipos\");\r\n            return;\r\n        } if (result.length > 0) {\r\n            toast.warn(\"Ya existe un pokemon con ese nombre\")\r\n        } if(pokemon.image.length === 0) {\r\n            toast.warn(\"No se ha seleccionado una imagen\")\r\n        } else {\r\n            createPokemon(pokemon)\r\n            history.push(routes.home)\r\n\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getPokemons();\r\n        getTypes();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"create-container\">\r\n            <div className='form-container'>\r\n\r\n            <div className=\"img-container\">\r\n                <img src={pokebola} alt=\"Pokebola\"></img>\r\n            </div> \r\n\r\n         <form onSubmit={(e) => handleSubmit(e)}>\r\n\r\n                    <div className=\"input-container\">\r\n                        <label>Name</label>\r\n                        <input type=\"text\" name='name' onChange={(e) => handleOnChange(e)} required />\r\n                    </div>\r\n\r\n                    <div className=\"input-container\">\r\n                        <label>Life</label>\r\n                        <input type=\"number\" name=\"life\" onChange={(e) => handleOnChange(e)} min=\"1\" max=\"100\" required />\r\n                    </div>\r\n\r\n                    <div className=\"input-container\">\r\n                        <label>Attack</label>\r\n                        <input type=\"number\" name=\"attack\" onChange={(e) => handleOnChange(e)} min=\"1\" max=\"100\" required />\r\n                    </div>\r\n\r\n                    <div className=\"input-container\">\r\n                        <label>Defense</label>\r\n                        <input type=\"number\" name=\"defense\" onChange={(e) => handleOnChange(e)} min=\"1\" max=\"100\" required />\r\n                    </div>\r\n\r\n                    <div className=\"input-container\">\r\n                        <label>Speed</label>\r\n                        <input type=\"number\" name=\"speed\" onChange={(e) => handleOnChange(e)} min=\"1\" max=\"100\" required />\r\n                    </div>\r\n\r\n                    <div className=\"input-container\">\r\n                        <label>Height</label>\r\n                        <input type=\"number\" name=\"height\" onChange={(e) => handleOnChange(e)} min=\"1\" max=\"100\" required />\r\n                    </div>\r\n\r\n\r\n                    <div className=\"input-container\">\r\n                        <label>Weight</label>\r\n                        <input type=\"number\" name=\"weight\" onChange={(e) => handleOnChange(e)} min=\"1\" max=\"100\" required />\r\n                    </div>\r\n\r\n                    <div className=\"input-imgContainer\">\r\n                        <label>Seleccionar Imagen\r\n                        <input type=\"file\"\r\n                            accept=\"image/jpg, image/png, image/jpeg\"\r\n                            className=\"file__input\"\r\n                            onChange={(e) => handleInputImage(e)}\r\n                        />\r\n                        </label>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className='select__container'>\r\n                        <label>Types</label>\r\n                        <Select\r\n                            styles={customStyles}\r\n                            width=\"70%\"\r\n                            marginLeft=\"-8px\"\r\n                            menuColor='red'\r\n                            isMulti\r\n                            name='tipos'\r\n                            options={typesOption}\r\n                            onChange={(e) => handleChangeCheck(e)}\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"btn-container\">\r\n                        <button type=\"submit\">Create</button>\r\n                        <Link to to={routes.home}>\r\n                            <button >Regresar</button>\r\n                        </Link>\r\n                    </div>\r\n\r\n                </form>\r\n            </div >\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        pokemons: state.pokemons,\r\n        types: state.types\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createPokemon: (data) => dispatch(createPokemon(data)),\r\n        getPokemons: () => dispatch(getPokemons()),\r\n        getTypes: () => dispatch(getTypes())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form)","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { getPokemonById } from '../../actions';\r\nimport routes from '../../helpers/routes';\r\nimport typeColors from '../../helpers/typeColors';\r\nimport './PokemonDetail.css';\r\n\r\n\r\nfunction PokemonDetail({ pokemon, getPokemonById }) {\r\n\r\n    const { id } = useParams();\r\n\r\n    const backType = {\r\n        width: \"160px\",\r\n        borderRadius: \"20px\",\r\n        textAlign: \"center\",\r\n        marginTop: \"5px\",\r\n        marginBottom: \"10px\",\r\n        textTransform: \"uppercase\",\r\n        color: \"#E8F3E2\",\r\n        fontSize: \"13px\",\r\n        paddingTop: \"4px\",\r\n        height: \"30px\"\r\n    }\r\n\r\n    const defaultImage = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/shiny/1.png\";\r\n\r\n    useEffect(() => {\r\n\r\n        const getPokemon = async () => {\r\n            await getPokemonById(id)\r\n        }\r\n\r\n        getPokemon();\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"card-detailContainer\">\r\n            {pokemon.length === 0\r\n\r\n                ?\r\n\r\n                <div id=\"loading-bar-spinner\" className=\"spinner\">\r\n                    <div\r\n                        className=\"spinner-icon\">\r\n                    </div>\r\n                </div>\r\n\r\n                :\r\n\r\n                <div className={`${pokemon.types[0]}-containerDetail`}>\r\n\r\n                    <div className='Name__cardDetail'>\r\n                        <h2>{pokemon.name}</h2>\r\n                    </div>\r\n\r\n                    <div className='Img__cardDetail'>\r\n                        <img\r\n                            src={pokemon.image ? pokemon.image : defaultImage}\r\n                            onError={(e) => {\r\n                                if (e.target.src.includes('undefined')) {\r\n                                    e.target.onerror = null;\r\n                                    e.target.src = defaultImage\r\n                                } else if (e.target.src.includes('.jpeg')) {\r\n                                    e.target.onerror = null;\r\n                                    e.target.src = pokemon.image.replace('jpeg', 'png')\r\n                                }\r\n                            }}\r\n                            alt={pokemon.name} />\r\n\r\n                    </div>\r\n\r\n                    <div className='Types__cardDetail'>\r\n                        {pokemon.types.map(e => (<div style={{ ...backType, backgroundColor: typeColors[e] }} >\r\n                            {e}\r\n                        </div>))}\r\n                    </div>\r\n\r\n\r\n                    <div className='Stats-containerDetail'>\r\n\r\n                        <div className='stat__div'>\r\n                            <p className='stat__title'>Life</p>\r\n                            <p className='stat'>{pokemon.life}</p>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <p className='stat__title'>Attack</p>\r\n                            <p className='stat'>{pokemon.attack}</p>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <p className='stat__title'>Defense</p>\r\n                            <p className='stat'>{pokemon.defense}</p>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <p className='stat__title'>Speed</p>\r\n                            <p className='stat'>{pokemon.speed}</p>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <p className='stat__title'>Height</p>\r\n                            <p className='stat'>{pokemon.height}</p>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <p className='stat__title'>Weight</p>\r\n                            <p className='stat'>{pokemon.weight}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"btn-containerDetail\">\r\n                        <Link to={routes.home}><button>Regresar</button></Link>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        pokemon: state.pokemon\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getPokemonById: (id) => dispatch(getPokemonById(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PokemonDetail)","import React from 'react';\r\n\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport NotFoundPage from '../pages/NotFoundPage/NotFoundPage';\r\nimport Home from '../pages/Home/Home';\r\nimport Landing from '../pages/Landing/Landing';\r\nimport routes from '../helpers/routes';\r\nimport Form from '../pages/Form/Form';\r\nimport PokemonDetail from '../pages/PokemonDetail/PokemonDetail';\r\n\r\nexport default function AppRouter() {\r\n    return (\r\n        <Switch>\r\n            <Route exact path={routes.landing} component={Landing} />\r\n            <Route exact path={routes.home} component={Home} />\r\n            <Route exact path={routes.form} component={Form} />\r\n            <Route exact path={routes.pokemonById} component={PokemonDetail} />\r\n\r\n            <Route path='*' component={NotFoundPage} />\r\n        </Switch>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport routes from '../../helpers/routes'\r\nimport './CreateForm.css';\r\n\r\nexport default function CreateForm() {\r\n    return (\r\n        <div className='btn-form'>\r\n            <Link to={routes.form}><button className=\"create__btn\" >Create Pokemon</button></Link>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nimport CreateForm from '../CreateForm/CreateForm';\r\n\r\nimport './Navbar.css';\r\n\r\nexport default function Navbar() {\r\n\r\n    let useLoc = useLocation();\r\n    let path = useLoc.pathname\r\n\r\n    return (\r\n\r\n        <div className=\"Navbar\">\r\n            <div></div>\r\n            <div className=\"title__container\">\r\n                <h2>{path === \"/form\" ? \"CREATE POKEMON\" : \"POKEMON APP\"}</h2>\r\n            </div>\r\n            {path === \"/form\"\r\n\r\n                ?\r\n\r\n                <div> </div>\r\n\r\n                :\r\n\r\n                <div className=\"btn__create__container\">\r\n                    <CreateForm />\r\n                </div>\r\n\r\n            }\r\n\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n","import './App.css';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport AppRouter from './routers/AppRouter';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {ToastContainer} from 'react-toastify';\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Navbar />\r\n        <ToastContainer />\r\n        <AppRouter />\r\n      </Router>\r\n    </div>\r\n  );\r\n};","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </ Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}